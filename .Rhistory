install.packages("stats")
q
q()
install.packages("stats")
q()
pkgList <- installed.packages(priority='NA')[,'Package']
CRANpkgs <- available.packages(
  contriburl=contrib.url('http://cran.r-project.org'))[,'Package']
forgePkgs <- available.packages(
  contriburl=contrib.url('http://r-forge.r-project.org', type='source')
)[,'Package']
pkgsToUp <- intersect(setdiff(pkgList, CRANpkgs), forgePkgs)
update.packages(checkBuilt=TRUE, ask=FALSE,
  repos="http://r-forge.r-project.org",
  oldPkgs=pkgsToUp)
q()
install.packages("RNetCDF")
q()
install.packages("vars")
install.packages("vars")
install.packages("vars")
q()
install.packages("vars")
install.packages("stats")
q()
install.packages("stats")
q()
install.packages("FitARMA")
q()
install.packages("Kendall")
q()
install.packages("ncf4")
q()
install.packages("ncdf")
q()
install.packages("../ncdf_1.6.8.tar.gz")
install.packages("../ncdf_1.6.8.tar.gz", repos = NULL, type="source")
q()
install.packages("shape")
q()
install.packages("quantreg")
q()
source("eke.r")
eke_ext[lvl,]
source("eke.r")
eke_ext[lvl,]
eke_ext[lvl,]
source("eke.r")
eke_ext[lvl,]
source("eke.r")
eke_ext[lvl,]
sf=try(summary(rq(as.vector(dur)~as.vector(eke_ext[lvl,]),taus),se="nid"))
q()
library(moments
)
install.packages("moments")
library(moments)
q()
library(fitdistrplus)
install.packages(fittdistrplus)
library(fitdistrplus)
install.packages(fitdistrplus)
q()
install.packages(minpack.lm)
install.packages("minpack.lm")
q()
library(ncdf)
install.packages("ncdf"9
)
install.packages("ncdf")
q()
set.seed(1001)
N<-100
x<-rnorm(N,1,2)
y
x
LL <- function(mu, sigma) {
+     R = dnorm(x, mu, sigma)
+     #
+     -sum(log(R))
+ }
ll <- function(mu,sigma){-sum(log(dnorm(x,mu,sigma)))}
ll(1,2)
ll(1,3)
ll(1,5)
ll(1,1)
ll(2,2)
ll(1,2)
library(stats4)
mle(LL, start = list(mu = 1, sigma=1))
mle(ll, start = list(mu = 1, sigma=1))
optim(par(1,1),ll)
q()
install.packages("")
install.packages("fExtremes")
library(fExtremes)
x=1:100
dgev(x=x,xi=1,mu=0,beta=0)
dgev(x=x,xi=1,mu=0,beta=1)
y=dgev(x=x,xi=1,mu=0,beta=1)
plot(x,y)
y=dgev(x=x,xi=0.5,mu=0,beta=1)
plot(x,y)
y=dgev(x=x,xi=0.5,mu=30,beta=1)
plot(x,y)
y=dgev(x=x,xi=0.5,mu=30,beta=10)
plot(x,y)
plot(x,y)
y=dgev(x=x,xi=0.5,mu=30,beta=3)
plot(x,y)
y=dgev(x=x,xi=0.5,mu=30,beta=30)
plot(x,y)
y=dgev(x=x,xi=0.2,mu=30,beta=30)
plot(x,y)
y=dgev(x=x,xi=0.2,mu=30,beta=10)
plot(x,y)
y=dgev(x=x,xi=0.2,mu=3,beta=10)
plot(x,y)
y=dgev(x=x,xi=0.2,mu=3,beta=3)
plot(x,y)
y=dgev(x=x,xi=0.2,mu=1,beta=3)
plot(x,y)
y=dgev(x=x,xi=0.2,mu=1,beta=10)
plot(x,y)
plot(x,y,log="y")
plot(x,y)
plot(x,y,log="y")
y=dgev(x=x,xi=1,mu=1,beta=10)
plot(x,y,log="y")
y=dgev(x=x,xi=1,mu=50,beta=10)
plot(x,y,log="y")
y=dgev(x=x,xi=1,mu=2,beta=1)
plot(x,y,log="y")
y=dgev(x=x,xi=1,mu=1,beta=1)
plot(x,y,log="y")
y=dgev(x=x,xi=1,mu=1,beta=10)
plot(x,y,log="y")
q
q()
source("master.r")
source("master.r")
y=dgev(x=x,xi=1,mu=1,beta=10)
plot(x,y,log="y")
plot(x,y,log="y")
y
source("master.r")
y
x
plot(x,y)
z=dgev(x=x,xi=1,mu=1,beta=10)
z
dgev(x=x,xi=1,mu=1,beta=10)
dgev(x=x,xi=0.9,mu=1,beta=10)
dgev(x=x,xi=0.9,mu=1,beta=15)
y
dgev(x=x,xi=0.9,mu=1,beta=5)
dgev(x=x,xi=0.5,mu=1,beta=5)
dgev(x=x,xi=0.2,mu=1,beta=5)
dgev(x=x,xi=0.01,mu=1,beta=5)
y
dgev(x=x,xi=0.01,mu=1,beta=20)
dgev(x=x,xi=0.01,mu=1,beta=2)
dgev(x=x,xi=0.09,mu=1,beta=2)
y
dgev(x=x,xi=0.09,mu=0.5,beta=2)
dgev(x=x,xi=0.1,mu=0.5,beta=2)
dgev(x=x,xi=0.2,mu=0.5,beta=2)
plot(x,z)
pdf("test.pdf")
plot(x,z)
graphics.off()
plot(x,z,log="y")
lines(x,y)
plot(x,y,log="y")
lines(x,z)
y
z=dgev(x=x,xi=0.2,mu=0.5,beta=2)
z
lines(x,z)
graphics.off()
source("master.r")
graphics.off()
source("master.r")
source("master.r")
source("master.r")
source("master.r")
source("master.r")
source("master.r")
graphics.off()
z=dgev(x=x,xi=0.2,mu=0.5,beta=2)
plot(x,y,log="y")
lines(x,z)
z=dgev(x=x,xi=0.1,mu=0.5,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.3,mu=0.5,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.3,mu=0.5,beta=4)
lines(x,z)
z=dgev(x=x,xi=0.1,mu=0.5,beta=4)
lines(x,z)
z=dgev(x=x,xi=0.1,mu=1,beta=4)
lines(x,z)
z=dgev(x=x,xi=0.1,mu=0,beta=4)
lines(x,z)
z=dgev(x=x,xi=0.1,mu=0,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.05,mu=-3,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.02,mu=-3,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.02,mu=-3,beta=1)
lines(x,z)
z=dgev(x=x,xi=0.02,mu=-3,beta=4)
lines(x,z)
plot(x,y,log="y")
lines(x,z)
z=dgev(x=x,xi=0.02,mu=-1,beta=4)
lines(x,z)
z=dgev(x=x,xi=0.02,mu=-1,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.02,mu=1,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.08,mu=1,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.12,mu=1,beta=2)
lines(x,z)
z=dgev(x=x,xi=0.4,mu=1,beta=2)
lines(x,z)
plot(x,y,log="y")
lines(x,z)
z=dgev(x=x,xi=0.3,mu=1,beta=2.5)
lines(x,z)
z=dgev(x=x,xi=0.3,mu=1,beta=3)
lines(x,z)
z=dgev(x=x,xi=0.2,mu=1,beta=3)
lines(x,z)
z=dgev(x=x,xi=0.2,mu=1,beta=1.5)
lines(x,z)
source("master.r")
graphics.off()
q()
source("master.r")
gro
klei
length(which(60 %in% gro))
length(gro[60 %in% gro])
length(gro[gro==60])
length(gro[gro==61])
length(gro[gro==62])
length(gro[gro==1])
length(gro[gro==1111])
q()
source("master.r")
similar
unique(similar)
q()
source("master.r")
q()
source("master.r")
source("master.r")
q()
